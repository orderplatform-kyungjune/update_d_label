name: 'Update D- Label'
description: 'update D- label'
inputs:
  github_token:
    description: 'GitHub token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: checkout repository
      uses: actions/checkout@v3

    - name: get pr labels
      id: pr-labels
      uses: actions/github-script@v7
      with:
        script: |
          async function getLabels() {
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            const labelsByPR = {};

            for (const pr of pullRequests) 
              const prNumber = pr.number;
              const { data: labels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber
              });

              labelsByPR[prNumber] = labels.map(label => label.name);
            }

            core.setOutput('labelsByPR', JSON.stringify(labelsByPR));  
          }
            
          getLabels();

    - name: update labels
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.TOKEN }}
        script: |
          async function updateLabels() {
            try {
              const labelsByPR = JSON.parse(process.env.LABELS_BY_PR);
            
              for (const prNumber in labelsByPR) {
                const DLabels = labelsByPR[prNumber].filter(prLabel => prLabel.startsWith('D-'));
            
                if (DLabels.length < 1) {
                  continue;
                }
            
                for (const DLabel of DLabels) {
                  await github.rest.issues.removeLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: prNumber,
                    name: DLabel
                  });
                } 

                const biggestLabelNumber = Math.max(...DLabels.map(DLabel => parseInt(DLabel.slice(2))));
                const newLabel = `D-${biggestLabelNumber < 1 ? 0 : biggestLabelNumber - 1}`;
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  labels: [newLabel]
                });
            
                console.log(`PR:${prNumber}, "D-" Label updated to "${newLabel}"`);
              }
            } catch (error) {
              console.error('Error updating labels:', error);
            }
          }

          updateLabels();
      env:
        LABELS_BY_PR: ${{ steps.pr-labels.outputs.labelsByPR }}